name: Publish Libraries to Nexus

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-libraries:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for changed-files detection

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.10'
          cache-read-only: false

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Detect changed modules
        id: changed-modules
        run: |
          changed_modules=""
          for file in $(git diff --name-only HEAD^ HEAD); do
            module=$(echo "$file" | cut -d'/' -f1)
            if [[ -d "$module" && (-f "$module/build.gradle" || -f "$module/build.gradle.kts") ]]; then
              changed_modules="$changed_modules $module"
            fi
          done
          # Remove duplicates and trim
          changed_modules=$(echo "$changed_modules" | tr ' ' '\n' | sort -u | tr '\n' ' ' | xargs)
          if [[ -z "$changed_modules" ]]; then
            echo "No modules changed, skipping deployment."
            echo "changed_modules=" >> $GITHUB_OUTPUT
          else
            echo "Changed modules: $changed_modules"
            echo "changed_modules=$changed_modules" >> $GITHUB_OUTPUT
          fi

      - name: Build and publish changed modules
        if: steps.changed-modules.outputs.changed_modules != ''
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          for module in ${{ steps.changed-modules.outputs.changed_modules }}; do
            echo "üì¶ Publishing module: $module"
            ./gradlew -p "$module" clean build publishToNexusRepo \
              -PnexusUsername=$NEXUS_USERNAME \
              -PnexusPassword=$NEXUS_PASSWORD \
              --stacktrace --info || {
                echo "‚ùå Failed to publish module: $module"
                exit 1
              }
            echo "‚úÖ Successfully published $module"
          done