// use plugins with modern style
plugins {
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'org.springframework.boot' version '3.2.3' apply false
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '6.25.0'
	id 'maven-publish'
	id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

allprojects {
	group = 'com.preschool.libraries'
	version = 'git rev-parse --short HEAD'.execute().text.trim() + '-0.0.1-SNAPSHOT'

	ext {
		set('snakeyaml.version','2.2') // Fix security
		set('springCloudVersion', "2023.0.0")
	}
}

nexusPublishing {
	repositories {
		nexusRepo {
			nexusUrl = uri("http://localhost:28082/repository/maven-releases")
			snapshotRepositoryUrl = uri("http://localhost:28082/repository/maven-snapshots")
			allowInsecureProtocol = true
			username = "$nexUsername"
			password = "$nexPassword"
		}
	}
}

subprojects {
	apply plugin: 'jacoco'
	apply plugin: 'idea'
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'com.diffplug.spotless'
	apply plugin: 'org.sonarqube'
	apply plugin: 'maven-publish'

	sonar {
		properties {
			property "sonar.sources", "src/main"
		}
	}

	bootJar {
		enabled = false
	}

	sourceCompatibility = JavaVersion.VERSION_17

	repositories {
		mavenLocal()
		mavenCentral()
		maven {
			url "http://localhost:28082/repository/maven-releases"
			allowInsecureProtocol = true
		}
	}

	project.allprojects.iterator().forEachRemaining {
		pj -> {
			println("Apply spotless configuration for project: " + pj.name)
			spotless {
				java {
					target(fileTree(pj.projectDir) {
						include '**/*.java'
						exclude 'build/generated/**/*.*'
					})
					importOrder()
					removeUnusedImports()
					googleJavaFormat('1.20.0')
					indentWithTabs(2)
					indentWithSpaces(4)
					endWithNewline()
				}
			}
		}
	}

	dependencies {
		implementation 'org.slf4j:slf4j-api:2.0.12'

		compileOnly 'org.projectlombok:lombok:1.18.30'
		annotationProcessor 'org.projectlombok:lombok:1.18.30'
		annotationProcessor group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
		implementation 'org.mapstruct:mapstruct:1.5.2.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
		implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.2'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
		implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

		testImplementation platform('org.junit:junit-bom:5.9.1')
		testImplementation 'org.junit.jupiter:junit-jupiter'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	test.finalizedBy jacocoTestReport

	check.dependsOn jacocoTestCoverageVerification

	spotlessJava {
		dependsOn compileJava
	}

	jacocoTestReport {
		dependsOn test
	}

	jacocoTestCoverageVerification {
		violationRules {
			rule {
				limit {
					minimum = 0.0
				}
			}
		}
	}

	project.allprojects.iterator().forEachRemaining {
		pj -> {
			println("publish libraries for: " + pj.name)
			publishing {
				publications {
					maven(MavenPublication) {
						artifact('build/libs/' + pj.name + '-' + pj.version + '-plain.jar') {
							extension 'jar'
						}
					}
				}
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

apply from: "$project.rootDir/sonar.gradle"